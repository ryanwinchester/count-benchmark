name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    name: Test

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ['ubuntu-20.04']
        elixir: ['1.12.x']
        otp: ['24.x']

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Build cache
        uses: actions/cache@v2
        with:
          path: _build
          key: build-${{ matrix.os }}-${{ hashFiles('lib/**/*.ex*') }}
          restore-keys: |
            build-${{ matrix.os }}-

      - name: Dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: mix-${{ matrix.os }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            mix-${{ matrix.os }}-

      - name: Dialyzer PLT cache
        uses: actions/cache@v2
        id: plt-cache
        with:
          path: priv/plts
          key: plt-${{ matrix.os }}-elixir-${{ matrix.elixir }}-otp-${{ matrix.otp }}-${{ hashFiles('lib/**/*.ex*') }}
          restore-keys: |
            plt-${{ matrix.os }}-elixir-${{ matrix.elixir }}-otp-${{ matrix.otp }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Check formatting
        run: mix format --check-formatted

      - name: Compile dependencies
        run: mix deps.compile

      - name: Compile app
        run: mix compile

      - name: Compile app for test
        run: mix compile
        env:
          MIX_ENV: test

      - name: Run Credo
        run: mix credo

      - name: Run tests
        run: mix test

      - name: Run Dialyzer
        run: mix dialyzer
